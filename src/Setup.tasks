<!-- Defines tasks used by Setup targets -->
<Project>

    <!-- CreateSetupNuspec task -->		
	<UsingTask TaskName="CreateSetupNuspec" 
               TaskFactory="CodeTaskFactory" 
               AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >  
		<ParameterGroup>			
			<OutputPath ParameterType="System.String" Required="true" />
            <InputDirectory ParameterType="System.String" Required="true" />
            <Target ParameterType="System.String" Required="true" />
            <PackageId ParameterType="System.String" Required="true" />
            <PackageVersion ParameterType="System.String" Required="true" />
            <Description ParameterType="System.String" Required="true" />
            <Authors ParameterType="System.String" Required="true" />
		</ParameterGroup>
        
		<Task>            
            <Reference Include="System.Xml"/>  
            <Reference Include="System.Xml.Linq"/>  
            
            <Using Namespace="System"/>  
            <Using Namespace="System.IO"/>  
            <Using Namespace="System.Xml.Linq"/>  
			
			<Code Type="Fragment" Language="cs">
			<![CDATA[

                // helper functions (we cannot use C# 7 local functions here)
                Func<string, string, string> getRelativePath = 
                    (string dirPath, string relativeTo) => 
                    {
                        var fileUri = new Uri(dirPath);
                        var referenceUri = new Uri(Path.Combine(relativeTo, "dummmy"));
                        return referenceUri
                                    .MakeRelativeUri(fileUri)
                                    .ToString()
                                    .Replace('/', Path.DirectorySeparatorChar);
                    };


                InputDirectory = Path.GetFullPath(InputDirectory);
                var outputDirectory = Path.GetDirectoryName(OutputPath);                

                var nugetNamespace = XNamespace.Get("http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd");

                var document = new XDocument(new XDeclaration("1.0", "utf-8", null));
                var packageElement = new XElement(nugetNamespace.GetName("package"));
                document.Add(packageElement);

                var metadataElement = new XElement(nugetNamespace.GetName("metadata"));
                packageElement.Add(metadataElement);

                metadataElement.Add(
                    new XElement(nugetNamespace.GetName("id"), PackageId),
                    new XElement(nugetNamespace.GetName("version"), PackageVersion),
                    new XElement(nugetNamespace.GetName("authors"), Authors),
                    new XElement(nugetNamespace.GetName("description"), Description)
                );

                var filesElement = new XElement(nugetNamespace.GetName("files"));
                packageElement.Add(filesElement);

                filesElement.Add(
                    new XElement(
                        nugetNamespace.GetName("file"),
                        //new XAttribute("src", getRelativePath(InputDirectory, outputDirectory) + "**" + Path.DirectorySeparatorChar + "*"),
						new XAttribute("src", InputDirectory + "**" + Path.DirectorySeparatorChar + "*"),
                        new XAttribute("target", Target)
                    )
                );
                document.Save(OutputPath);
			]]>
			</Code>
		</Task>
	</UsingTask> 

</Project>